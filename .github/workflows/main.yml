
name: Build GKI Kernel with KSU

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v4
      with:
        repository: realme-kernel-opensource/realme_gtneo6-AndroidV-kernel-source
        ref: master
        path: kernel

    - name: Setup Toolchains
      run: |
        sudo apt-get install -y build-essential flex bison libssl-dev
        git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang --depth=1 -b android-14.0.0_r1

    - name: Integrate KernelSU
      run: |
        cd kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
        sed -i 's/# CONFIG_KPROBES is not set/CONFIG_KPROBES=y/' arch/arm64/configs/gki_defconfig

    - name: Compile Kernel
      env:
        CLANG_PATH: ${{ github.workspace }}/clang/clang-r498229b/bin
      run: |
        cd kernel
        make -j$(nproc) \
          ARCH=arm64 \
          CC=$CLANG_PATH/clang \
          CLANG_TRIPLE=aarch64-linux-gnu- \
          CROSS_COMPILE=aarch64-linux-gnu- \
          gki_defconfig Image.gz-dtb

    - name: Package AnyKernel3
      run: |
        git clone https://github.com/KernelSU/AnyKernel3
        cp kernel/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cat > AnyKernel3/anykernel.sh <<EOF
        kernel.string=Realme GT Neo6 GKI with KSU
        do.devicecheck=1
        block=/dev/block/by-name/boot
        supported.versions=14
        EOF
        cd AnyKernel3 && zip -r9 KernelSU_GKI.zip *

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: KernelSU_GKI_Package
        path: AnyKernel3/KernelSU_GKI.zip
Â 
